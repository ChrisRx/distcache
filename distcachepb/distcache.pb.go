// Code generated by protoc-gen-go. DO NOT EDIT.
// source: distcachepb/distcache.proto

/*
Package distcachepb is a generated protocol buffer package.

It is generated from these files:
	distcachepb/distcache.proto

It has these top-level messages:
	Request
	Response
*/
package distcachepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status int32

const (
	Status_Err Status = 0
	Status_Ok  Status = 1
)

var Status_name = map[int32]string{
	0: "Err",
	1: "Ok",
}
var Status_value = map[string]int32{
	"Err": 0,
	"Ok":  1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}
func (Status) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TrxnType int32

const (
	TrxnType_GET    TrxnType = 0
	TrxnType_SET    TrxnType = 1
	TrxnType_DELETE TrxnType = 2
)

var TrxnType_name = map[int32]string{
	0: "GET",
	1: "SET",
	2: "DELETE",
}
var TrxnType_value = map[string]int32{
	"GET":    0,
	"SET":    1,
	"DELETE": 2,
}

func (x TrxnType) String() string {
	return proto.EnumName(TrxnType_name, int32(x))
}
func (TrxnType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type Request struct {
	Type  TrxnType `protobuf:"varint,1,opt,name=type,enum=distcachepb.TrxnType" json:"type,omitempty"`
	Key   string   `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value string   `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetType() TrxnType {
	if m != nil {
		return m.Type
	}
	return TrxnType_GET
}

func (m *Request) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Request) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Response struct {
	Status Status `protobuf:"varint,1,opt,name=status,enum=distcachepb.Status" json:"status,omitempty"`
	Server string `protobuf:"bytes,2,opt,name=server" json:"server,omitempty"`
	Key    string `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`
	Value  string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_Err
}

func (m *Response) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

func (m *Response) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Response) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "distcachepb.Request")
	proto.RegisterType((*Response)(nil), "distcachepb.Response")
	proto.RegisterEnum("distcachepb.Status", Status_name, Status_value)
	proto.RegisterEnum("distcachepb.TrxnType", TrxnType_name, TrxnType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cache service

type CacheClient interface {
	Trxn(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type cacheClient struct {
	cc *grpc.ClientConn
}

func NewCacheClient(cc *grpc.ClientConn) CacheClient {
	return &cacheClient{cc}
}

func (c *cacheClient) Trxn(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/distcachepb.Cache/Trxn", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cache service

type CacheServer interface {
	Trxn(context.Context, *Request) (*Response, error)
}

func RegisterCacheServer(s *grpc.Server, srv CacheServer) {
	s.RegisterService(&_Cache_serviceDesc, srv)
}

func _Cache_Trxn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheServer).Trxn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/distcachepb.Cache/Trxn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheServer).Trxn(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "distcachepb.Cache",
	HandlerType: (*CacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Trxn",
			Handler:    _Cache_Trxn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "distcachepb/distcache.proto",
}

func init() { proto.RegisterFile("distcachepb/distcache.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0xf3, 0xaf, 0xdb, 0x3a, 0x82, 0x2c, 0x63, 0x2b, 0x51, 0x2f, 0x25, 0xa7, 0x58, 0x21,
	0x42, 0xc5, 0xab, 0x17, 0x5d, 0xbc, 0x08, 0x42, 0x9a, 0xa3, 0x97, 0xb4, 0x0e, 0x28, 0x95, 0x66,
	0xdd, 0xdd, 0x54, 0xf3, 0xed, 0x65, 0x93, 0xad, 0xa4, 0xd2, 0xdb, 0x9b, 0x79, 0x6f, 0xf7, 0x37,
	0x33, 0x70, 0xf9, 0xf6, 0xa1, 0xcd, 0xaa, 0x5c, 0xbd, 0x93, 0x5c, 0xde, 0xfc, 0xe9, 0x4c, 0xaa,
	0xca, 0x54, 0x78, 0xdc, 0x33, 0x93, 0x57, 0x18, 0xe6, 0xf4, 0x55, 0x93, 0x36, 0x78, 0x05, 0x91,
	0x69, 0x24, 0xc5, 0xfe, 0xd4, 0x4f, 0x4f, 0xe6, 0x93, 0xac, 0x17, 0xcb, 0x0a, 0xf5, 0xb3, 0x29,
	0x1a, 0x49, 0x79, 0x1b, 0x41, 0x0e, 0xe1, 0x9a, 0x9a, 0x38, 0x98, 0xfa, 0xe9, 0x51, 0x6e, 0x25,
	0x8e, 0x61, 0xb0, 0x2d, 0x3f, 0x6b, 0x8a, 0xc3, 0xb6, 0xd7, 0x15, 0xc9, 0x37, 0x8c, 0x72, 0xd2,
	0xb2, 0xda, 0x68, 0xc2, 0x6b, 0x60, 0xda, 0x94, 0xa6, 0xd6, 0x0e, 0x70, 0xba, 0x07, 0x58, 0xb4,
	0x56, 0xee, 0x22, 0x78, 0x06, 0x4c, 0x93, 0xda, 0x92, 0x72, 0x0c, 0x57, 0xed, 0xc0, 0xe1, 0x01,
	0x70, 0xd4, 0x03, 0xcf, 0xce, 0x81, 0x75, 0x3f, 0xe2, 0x10, 0x42, 0xa1, 0x14, 0xf7, 0x90, 0x41,
	0xf0, 0xb2, 0xe6, 0xfe, 0x2c, 0x85, 0xd1, 0x6e, 0x1b, 0x6b, 0x3e, 0x89, 0x82, 0x7b, 0x56, 0x2c,
	0x44, 0xc1, 0x7d, 0x04, 0x60, 0x8f, 0xe2, 0x59, 0x14, 0x82, 0x07, 0xf3, 0x7b, 0x18, 0x3c, 0xd8,
	0xf1, 0xf0, 0x0e, 0x22, 0xfb, 0x04, 0xc7, 0x7b, 0x23, 0xbb, 0xbb, 0x5d, 0x4c, 0xfe, 0x75, 0xbb,
	0x7d, 0x13, 0x6f, 0xc9, 0xda, 0x7b, 0xdf, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xb5, 0xbd, 0x22,
	0x00, 0x8e, 0x01, 0x00, 0x00,
}
